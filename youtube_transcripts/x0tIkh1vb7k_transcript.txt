nesta sÃ©rie de vÃ­deos vou-vos mostrar como implementar esta aplicaÃ§Ã£o que obtÃ©m todos os personagens da trilogia do Senhor dos AnÃ©is A partir de um servidor por isso Ã© que isto demor algum tempo para cada personagem indica se Ã© um homem ou uma mulher atravÃ©s deste icon e eu posso clicar em qualquer personagem para saber em que ano nasceu e morreu e mais informaÃ§Ã£o se quiser neste primeiro vÃ­deo ainda nÃ£o vou ligar isto ao servidor vou mostrar isto apenas mas com uma lista fixa de personagens como Ã© que vamos implementar este componente que Ã© uma list View e como Ã© que ele navega para o respectivo detalhe e volta Ã  list viw Ora bem JÃ¡ criei um projeto flutter vazio neste momento apenas tem aquilo que vem PromissÃ£o quando criamos um projeto a Ãºnica coisa que fiz foi acrescentar aqui neste ficheiro analysis options estas rules para ele nÃ£o chatear muito com o warnings nesta fase portanto temos o nosso Main default com que ele normalmente Ã© criado eu vou jÃ¡ apagar aqui isto e vou tambÃ©m apagar esta classe hom page Vou deixar sÃ³ mesmo aqui esta parte este home page vai mudar depois jÃ¡ lÃ¡ vamos vamos comeÃ§ar por criar entÃ£o uma pasta pages no qual Vamos criar a nossa pÃ¡gina que vai mostrar a lista de a lista de personagens vou chamar characters list page ela vai ser um widget vou comeÃ§ar por criar um widget characters list page vamos importar isto que aqui estÃ¡ enganei-me aqui a escrever isto aqui um ref e vou jÃ¡ mudar aqui isto para characters list page nÃ£o tem um title Portanto vamos apagar e vamos entÃ£o arrancar isto como estÃ¡ neste momento Ok temos um placeholder no nÃ£o Ã© o que cremos vamos jÃ¡ comeÃ§ar por mudar isto para um scaffold vai ter uma app bar neste caso vou lhe dar um tÃ­tulo Lord of the Rings e vou tambÃ©m colocar aqui um body que para jÃ¡ vai ser um botÃ£o com o texto get characters e falta-me o onepress para jÃ¡ nÃ£o vai fazer nada vamos ver como Ã© que isto fica Ok o botÃ£o vamos centrÃ¡l vamos colocÃ¡-lo no Center e aqui estÃ¡ ele temos o nosso ecrÃ£ Inicial Ok o prÃ³ximo passo seria mostrar a lista dos personagens mas antes disso temos que criar os objetos que vÃ£o guardar essa informaÃ§Ã£o lembrem-se que deve haver uma separaÃ§Ã£o Clara entre interface grÃ¡fica e lÃ³gica de negÃ³cio neste caso a lÃ³gica de negÃ³cio sÃ£o os objetos que representam cada um dos personagens Vamos colocÃ¡-los numa pasta Model e aqui dentro Vamos criar um ficheiro Character que lÃ¡ dentro vai ter uma classe Character que vai ter alguns dos atributos que estÃ£o normalmente Associados Ã s personagens um identificador uma data de nascimento uma data de morte o gÃ©nero masculino ou feminino e um nome reparem que estes trÃªs atributos estÃ£o opcionais ou seja eles podem ser nul este o edificador e o nome sÃ£o obrigatÃ³rios ele agora tÃ¡-se a queixar porque eles tÃªm que ser inicializados mas isso vai ser jÃ¡ resolvido aqui com o Construtor e agora quero chamar a atenÃ§Ã£o para eu nÃ£o gosto muito destes construtores quero chamar a atenÃ§Ã£o para a diferenÃ§a entre este Construtor e o Construtor que eu vou querer usar vou aqui criar uma funÃ§Ã£o Main sÃ³ para perceberem a diferenÃ§a eu posso criar um personagem chamando o Construtor obviamente mas reparem que que eu tenho que preencher os cinco atributos mesmo eles nÃ£o existindo por exemplo o ID Tem que existir mas por exemplo Isto pode estar aul Isto pode estar a nul Isto pode estar a nul e este Tem que existir Ou seja eu tenho que estar a passar estes nulos eh portanto atributos opcionais eu sou obrigado Ã  mesmo a preenchÃª-los neste Construtor AlÃ©m disso assim de repente eu nÃ£o consigo lembrar-me se este nulo Ã© a data de nascimento ou a data de morte se este Ã© o gÃ©nero ou Ã© outra coisa entÃ£o o ideal era que o conseguisse por um lado sÃ³ passar os atributos que me interessam e por outro que os conseguisse distinguir facilmente perceber facilmente O que Ã© que representa cada atributo E para isso nÃ³s vamos colocar aqui umas chavetas Basta fazer isso aqui Ã  volta dos atributos ao fazermos isso ele vai-se queixar que este atributo tem que ter aqui um required porque Ã© um atributo obrigatÃ³rio Este Ã© opcional Este Ã© opcional Este tambÃ©m tem aqui Um atributo e a gente faz o que ele diz tem que ter aqui um required porque Ã© um atributo obrigatÃ³rio e agora vamos voltar a fazer a mesma coisa e reparem como agora ele para jÃ¡ mostra sÃ³ mostra jÃ¡ por nome diz-nos que o primeiro atributo Ã© o id e o segundo Ã© o nome com aquele dois pontos e mostra-nos apenas os atributos obrigatÃ³rios portanto eu apenas preciso de preencher os atributos obrigatÃ³rios eventualmente se quiser preencher os outros atributos tenho que dizer qual Ã© o nome desse atributo posso passÃ¡-los por qualquer ordem nÃ£o tem que ser pela mesma ordem que que estÃ¡ no Construtor passar assim desta forma ou seja eu gosto bastante mais destes construtores com argumentos com nome em vez de argumentos posicionais e por isso recomendo que faÃ§am o mesmo feita esta explicaÃ§Ã£o Vamos entÃ£o avanÃ§ar agora que temos a nossa classe Character quando nÃ³s carregarmos neste botÃ£o o que nÃ³s queremos Ã© que ele nos retorne uma lista de objetos deste tipo para isso nÃ³s vamos criar aqui um novo uma nova pasta chamada repositÃ³rio porque normalmente Ã© boa para prÃ¡tica nÃ³s criarmos uma classe Ã  qual chamamos repositÃ³rio que indica Quais sÃ£o as funÃ§Ãµes que estÃ£o disponÃ­veis na Api para obtermos ou enviarmos informaÃ§Ã£o EntÃ£o vou chamar esta classe characters repository e vai ser tambÃ©m uma classe characters repository e esta classe vai ter apenas duas funÃ§Ãµes vamos importar portanto vai ter uma uma funÃ§Ã£o que retorna uma lista de personagens e uma funÃ§Ã£o que dado um ID retorna informaÃ§Ã£o sobre esse personagem neste momento como nÃ³s nÃ£o estamos a ir ao servidor estas funÃ§Ãµes vÃ£o retornar a informaÃ§Ã£o fixa ou seja eu vou retornar aqui com esta anotaÃ§Ã£o isto representa uma lista em Dart e aqui dentro eu vou criar Pedro e vou tambÃ©m dizer que o gender Ã© mail vou criar outro jÃ¡ agora esta representaÃ§Ã£o do gender a talvez nÃ£o seja a mais apropriada como string Mas vai ser a forma como api nos vai retornar EntÃ£o isto facilita jÃ¡ aqui a traduÃ§Ã£o depois daquilo que vem da Api para o programa aqui neste caso eu vou retornar sempre o mesmo personagem e agora criar aqui uma classe characters repositÃ³rio depois no onepress vou chamar reposit Story pon get characters ok nÃ³s agora vamos querer guardar isto aqui numa variÃ¡vel Vamos guardÃ¡-lo numa variÃ¡vel aqui da classe Porque isto vai dar jeito estar cÃ¡ fora uma variÃ¡vel characters que vamos inicializar a vazio isto Deixa de ser const e agora vamos atribuir a essa variÃ¡vel o valor retornado por esta funÃ§Ã£o agora o que Ã© que nÃ³s queremos queremos que quando essa variÃ¡vel for vazia ele most mostra o botÃ£o mas quando estiver preenchida mostro uma lista para isso acontecer isso significa que este widget vai ter que mudar apÃ³s a gente carregar no botÃ£o para ele mudar ele tem que deixar de ser stateless widget porque os stateless widget nunca mudam depois de ser criados Portanto vamos converter isto para stateful widget agora uma vez que ele tÃ¡ criado JÃ¡ podemos chamar aqui o set state porque nÃ³s queremos que apÃ³s ele atualizar o characters que ele refresque o widget que ele volta a chamar o build claro que agora agora quando voltar a chamar o build nÃ³s nÃ£o queremos voltar a mostrar o botÃ£o nÃ³s queremos mostrar a lista e portanto vamos ter que ter aqui uma separaÃ§Ã£o Aqui dentro deste Body vamos ter que ter basicamente um que indica se o se a lista de personagens estÃ¡ vazia EntÃ£o mostra o que estÃ¡ agora se tem personagens EntÃ£o mostra uma lista criar aqui usar o operador ternÃ¡rio para indicar aqui com o ponto de interrogaÃ§Ã£o ou estamos perante uma situaÃ§Ã£o em que a lista estÃ¡ vazia nesse caso mostra isso ou caso contrÃ¡rio Estamos numa situaÃ§Ã£o em que vai mostrar a lista por agora eu vou criar um text lista sÃ³ para exemplificar Vamos entÃ£o correr novamente e cÃ¡ estÃ¡ quando carregamos no botÃ£o ele transforma em lista agora sÃ³ temos que em vez deste texto com uma lista colocar aqui uma lista verdadeira antes de mais quero eu estou a achar jÃ¡ este cÃ³digo um bocado complicado demais eu vou fazer o seguinte eu vou extrair daqui um mÃ©todo que vou lhe chamar build build get characters Button Ok jÃ¡ ficou bastante mais simples e agora neste text list vou fazer a mesma coisa que vou chamar build list para jÃ¡ vamos fazer aqui uma coisa Isto vai passar a ser um widget e este tambÃ©m vai passar a ser um widget Vamos entÃ£o converter isto para uma lista vamos comeÃ§ar por transformar isto num bloco e agora vamos em vez do text usar um componente chamado list View que Ã© o componente que Ã© usado para criar uma lista e vamos chamar em Construtor chamado separated porque nÃ³s queremos que os items apareÃ§am separados com uma linha entre eles para jÃ¡ vou deixar Isto assim vou sÃ³ dar aqui um formato e vou aqui preencher jÃ¡ aqui algumas coisas isto na realidade Ã© um index para alguma coisa este a mesma coisa antes de explicar EntÃ£o o que Ã© que isto significa ele recebe trÃªs parÃ¢metros um deles Ã© bastante o item count que Ã© Quantos elementos tem a lista o item builder vai ser responsÃ¡vel por construir para aquele index indicado Qual Ã© o componente que vai representar essa linha e o separator builder vai ser responsÃ¡vel por dizer qual Ã© a divisÃ£o que deve ser aplicada para aquele index vamos comeÃ§ar pelo item count muito simples nÃ£o Ã© se nÃ³s temos jÃ¡ uma variÃ¡vel characters estÃ¡ preenchida com o tamanho EntÃ£o Ã© sÃ³ usar o Lens para obter o o item count o item builder vamos usar aqui um componente chamado list Style que Ã© um item de uma lista e o lyle tem um title que nÃ³s para jÃ¡ vamos dizer que Ã© igual ao index finalmente aqui vamos colocar este divider que basicamente Ã© uma linha com esta largura com esta espessura e de cor cinzenta que vai separar cada um dos items Vamos entÃ£o V ver como Ã© que isto fica neste momento Ora bem temos entÃ£o neste momento 0 E1 porque o que nÃ³s estamos a fazer Ã© cada list Style mostra o index no qual estÃ¡ ou seja ele comeÃ§a por chamar com o zero e a seguir com o um nÃ³s vamos querer agora alterar isto para passar a ter o nome do personagem como Ã© que vamos fazer isso em vez do Index vamos outra vez ao characters mas na posiÃ§Ã£o index porque o caras Ã© uma lista portanto nessa posiÃ§Ã£o nÃ³s vamos querer obter o name e passamos a ter entÃ£o aqui os nomes outra coisa que queremos melhorar Ã© acrescentar aqui um Ã­cone no inÃ­cio com a indicar se Ã© um homem ou uma mulher para isso vamos usar aqui uma propriedade que Ã© o leading o leading permite atribuir um widget ao inÃ­cio do list Style aqui encostado Ã  esquerda nÃ³s vamos querer que is seja um icon e temos aqui Man Ok para jÃ¡ vou pÃ´r todos como se fosse Ã© um homem mas na realidade nÃ³s queremos distinguir consoante a personagem Ã© homem ou mulher e para isso nÃ³s vamos criar aqui outra vez um uma condiÃ§Ã£o com o operador trinÃ¡rio em que basicamente vamos questionar o gender se for igual a mail entÃ£o Ã© o Ã© este caso contrÃ¡rio vamos voltar a verificar se Ã© feminino porque pode nÃ£o ser nenhum deles deix aqui ajustar isto finalmente vamos dizer que Ã© no caso nÃ£o seja nenhum deles vamos formatar isto para perceber melhor Portanto vamos lÃ¡ entÃ£o se o gender Ã© mail EntÃ£o vai colocar um icon Man caso contrÃ¡rio se for femil vai colocar um icon woman caso contrÃ¡rio nÃ£o Ã© nem mail nem female EntÃ£o vai colocar no vamos ver e jÃ¡ cÃ¡ estÃ¡ entÃ£o o icon diferente em cada um deles qu a terminar a nossa aplicaÃ§Ã£o mas fal ainda quando se clica em cada uma destas items ele abrir o detalhe correspondente a este personagem para isso vamos criar uma nova pÃ¡gina novo widget ao qual vamos chamar Character detail page este widget tem aqui algumas caracterÃ­sticas que quero chamar atenÃ§Ã£o uma delas Ã© que recebe no Construtor o Character ID ou seja nÃ³s quando criamos este widget temos que indicar qual Ã© o identificador do personagem para o qual queremos o detalhe depois no build obtemos o characters reposit tal e qual jÃ¡ acontecia no characters list mas a seguir chamamos a funÃ§Ã£o get Character com o Character ID de forma obter o objeto com os seus dados uma vez obtidos os seus dados eu posso criar aqui um app bar com o texto com o ID que era o identificador e por exemplo no Body colocar text Character name Finalmente eu vou querer aqui neste list Style apanhar o evento de clicar lÃ¡ de selecionar ou de fazer Tap para entÃ£o saltar para a pÃ¡gina respectiva como Ã© que eu vou fazer isso H aqui um atributo chamado ontap que basicamente recebe uma funÃ§Ã£o que Ã© chamada quando carregamos naqu neste item e o que eu quero fazer Ã© fazer um Navigator ponto push passo lhe o context e passo este objeto material page route que recebe um builder que eu vou preencher desta forma falta-me aqui o Character ID como Ã© que eu obtenho o Car ID Ã© simples Ã© sÃ³ pegar aqui no Cars index e colocar o id dele Esta Ã© a forma que temos de Navegar fazendo um push de um novo ecrÃ£ em cima do que jÃ¡ estÃ¡ quando usamos este push O que significa Ã© que ele permite que a gente faÃ§a back automaticamente do do ecrÃ£ para o qual fomos se nÃ³s fizermos quisermos que ele faÃ§a back quisemos que ele substitua mesmo nÃ³s podemos fazer um push replacement neste caso queremos um push porque eu quero que apÃ³s ver o Detalhe ele volta atrÃ¡s possa voltar atrÃ¡s e voltar Ã  lista vamos testar isto aparentemente nÃ£o aconteceu nada mas eu agora quando clico aqui ele jÃ¡ me salta para o detalhe e reparem que ele aparece sempre aqui Pedro isto Ã© uma razÃ£o para se jÃ¡ nÃ£o se lembram tem a ver com a forma como NÃ³s criamos o repositÃ³rio nÃ³s dissemos que independentemente do id que aqui aparece a gente vai sempre tornar Pedro Ã© por essa razÃ£o que neste momento isto estÃ¡ errado quando NÃ³s ligamos isto isto vai passar a funcionar corretamente Vamos sÃ³ aqui afinar um bocadinho aqui este ecrÃ£ isto devia estar centrado Vamos fazer um Wap com Center e vamos tambÃ©m aumentar um bocado o tamanho dele vou meter aqui um Style Tex Style e dizer que o Font size Ã© 40 e vamos tambÃ©m colocar aqui uma imagem em cima de um anel atÃ© porque Ã© interessante pode ser interessante saberem usar imagens esta imagem neste caso ela vem de um endereÃ§o vem da net nÃ£o estÃ¡ incluÃ­da na aplicaÃ§Ã£o Temos que fazer um wraap com um colum para poder ter aqui vÃ¡rios items alinhados na vertical e agora em cima deste nÃ³s vamos colocar uma image vamos dizer que tem tamanho 150 e que a image em si Ã© uma Network image e vamos lhe passar este endereÃ§o vamos refrescar Ah ele ao colocar uma coluna nÃ³s temos que alterar aqui o Main ais alignment para passar a ser Center e vamos meter aqui mais jÃ¡ que estamos aqui a alterar isto muito rapidamente aqui duas informaÃ§Ãµ Vamos colocar aqui duas informaÃ§Ãµes da data de nascimento e a data da morte vou sÃ³ dar aqui tambÃ©m um Style a estes dois componentes neste caso eles estÃ£o a nul Porque nÃ³s nÃ£o temos essa informaÃ§Ã£o aqui no nosso repositÃ³rio vamos preencher pronto temos EntÃ£o a nossa aplicaÃ§Ã£o terminada mostra sempre a mesma coisa vamos melhorÃ¡-la agora ligando a api no prÃ³ximo vÃ­deo
