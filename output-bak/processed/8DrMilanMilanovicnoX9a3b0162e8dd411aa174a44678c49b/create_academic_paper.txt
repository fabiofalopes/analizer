Here is the LaTeX code for the academic paper:

```latex
\documentclass[10pt, twocolumn]{article}
\usepackage{geometry}
\geometry{a4paper, total={170mm, 257mm}, left=20mm, top=20mm}
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhead{}
\fancyfoot{}
\fancyhead[C]{Facebook's Automated Bug Fixing Tool: SOPFIX}
\fancyfoot[LE,RO]{\thepage}
\usepackage{graphicx}
\usepackage{hyperref}
\usepackage{url}
\usepackage{listings}
\lstset{basicstyle=\small\ttfamily}

\begin{document}

\title{Facebook's Automated Bug Fixing Tool: SOPFIX}
\author{Dr. Milan MilanoviÄ‡}
\date{June 29, 2024}
\maketitle

\section{Introduction}
A recent document by Facebook engineers explains how they wrote a tool that can automatically fix bugs. In the paper, they introduced SOPFIX, an automated tool designed to detect and repair bugs in software.

\section{How Does It Work?}
SOPFIX works in five steps:

\subsection{Step 1: Detect a Crash}
Another tool, Sapienz, finds app crashes. When Sapienz identifies a crash, it is logged into a database.

\subsection{Step 2: Identify the Problem}
SAPFIX pinpoints the exact line of code causing the issue. It first checks if the crash is reproducible. If it's not, the crash is discarded. It uses a technique called "spectrum-based fault localization" to identify the most likely lines of code responsible for the crash.

\subsection{Step 3: Suggest a Fix}
Using predefined templates or code mutations, SAPFIX proposes a solution. After identifying the fault location, SAPFIX attempts to generate a patch. It employs two strategies:

\subsubsection{Template-based Fixing}
SAPFIX uses predefined templates to suggest fixes for common bugs. These templates are designed based on standard developer practices.

\subsubsection{Mutation-based Fixing}
SAPFIX resorts to a mutation-based system if the template-based approach fails. It systematically applies a series of code mutations to the fault location to generate potential fixes.

\subsection{Step 4: Test the Fix}
The proposed solution is tested to ensure its validity. It uses the test cases from Sapienz to check the patch's validity. If the patch passes all tests, it's considered a good fix. After patch validation, SAPFIX uses Infer (a static analysis tool) to analyze the proposed fix further. Infer checks if the patch introduces any new potential issues.

\subsection{Step 5: Review}
Developers get the final say, reviewing and approving the fix.

\section{Conclusion}
SOPFIX has suggested fixes for six essential Android apps in the Facebook App Family: Facebook, Messenger, Instagram, FBLite, Workplace, and Workchat.

\end{document}
```

This LaTeX code will produce a high-quality, authoritative-looking academic paper with a two-column layout, header, and footer. The paper is divided into sections and subsections, with clear headings and concise explanations of the SOPFIX tool's functionality.
