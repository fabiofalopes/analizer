Neste vÃ­deo vamos comeÃ§ar a preparar o World of the Rings para o modo offline em que se nÃ³s perdermos a conectividade continuamos a poder obter os personagens e informaÃ§Ã£o sobre os personagens no caminho para fazer essa preparaÃ§Ã£o vamos aproveitar para resolver um erro que jÃ¡ vem de trÃ¡s e que se calhar nÃ£o deram por ele mas antes disso quero sÃ³ lembrar o que Ã© que estÃ¡ feito temos um botÃ£o para obter os personagens a partir da api e depois podemos obter o detalhe temos um entÃ£o para obter personagens que estÃ£o na base de dados que foram inseridas atravÃ©s do insert Character e agora o erro que eu estava a falar Ã© este quando eu agora carrego aqui ele dÃ¡ um erro OK qualquer um deles dÃ¡ um erro e olhando para aqui para o log nÃ£o se percebe o que Ã© que poderÃ¡ estar a acontecer para facilitar este diagnÃ³stico eu vou acrescentar aqui uma ferramenta que me dÃ¡ muito jeito gosto muito dela que Ã© o priy http loger vamos acrescentar Aqui Esta biblioteca que basicamente o que ela vai fazer Ã© permitir logar todos os pedidos http API de uma forma simples eles passam a aparecer aqui sem a gente ter praticamente trabalho nenhum basta modificarmos aqui uma linha em vez deste client ser simplesmente este client vamos substituir por uma classe do Pr http logger desta forma http with middleware Ã© uma classe do pretty http logger importamos e agora dizemos aqui que todos os pedidos sÃ£o feitos atravÃ©s deste http logger e que o nÃ­vel de log Ã© o Basic isto significa que ele apenas mostra informaÃ§Ã£o bÃ¡sica Qual Ã© o pedido e qual Ã© a resposta nÃ£o mostra o conteÃºdo da resposta se por alguma razÃ£o nos der jeito de ver o conteÃºdo da resposta basta alterar aqui o nÃ­vel de log para body aqui nÃ£o queremos isso porque a resposta o Jason que vem deste pedido Ã© bastante extenso e nÃ£o queremos encher aqui a consola com isso Portanto vamos deixar o Basic vamos aqui dar um restart vamos comeÃ§ar a ver aqui os pedidos a aparecer e quando eu venho aqui cÃ¡ estÃ¡ apareceu este pedido tÃ£o a ver portanto cada vez que eu vosso servidor ele mostra-me aqui o pedido isto dÃ¡ bastante jeito para diagnosticar problemas e agora vamos ver o que Ã© que acontece aqui quando eu carrego aqui Ops ele tÃ¡ a ir ao servidor buscar a personagem 74 nÃ£o existe a personagem 74 porquÃª Porque esta personagem foi criada por nÃ³s atravÃ©s do insert Character na base de dados ela na realidade nÃ£o existe entÃ£o hÃ¡ aqui um problema que Ã© eu para obter os detalhes os dados desta personagem eu tenho que perceber que ela foi criada na base de dados e tem que usar a base de dados para isso vamos corrigir este erro ComeÃ§ando por acrescentar aqui neste ficheiro que neste momento sÃ³ tem uma forma de obter os personagens todos da base de dados e inserir um personagem precisamos ter aqui uma funÃ§Ã£o que nos permita obter os dados de um personagem em concreto Ã  SemelhanÃ§a do que jÃ¡ estÃ¡ a ser feito aqui no repositÃ³rio tÃ£o a ver portanto eu vou precisar de uma coisa deste gÃ©nero vou copiÃ¡-la para aqui vou colocÃ¡-la aqui debaixo para ficar mais organizado vou manter esta minha regra aqui no inÃ­cio e agora vou aqui em vez de obter todos os personagens que era o que estava a acontecer aqui uma lista de personagens eu quero apenas obter um personagem para isso vou usar exatamente a mesma forma que aqui estÃ¡ mas vou lhe acrescentar aqui um R reparem que coloquei aqui um ponto de interrogaÃ§Ã£o e ele vai ser substituÃ­do pelo que eu colocar aqui dentro desta lista se puser aqui vÃ¡rios pontos de interrogaÃ§Ã£o posso colocar aqui vÃ¡rios elementos nesta lista Ã© assim que devem construir as vossas queries Ã  base de dados e isto vai retornar me uma lista reparem que esta lista agora sÃ³ vai ter uma entrada Ã  partida porque sÃ³ existe um Car com aquele ID se tudo tiver bem isto Ã© uma primary Key logo eu pelo sim pelo nÃ£o nÃ£o vai eu ter pedido um ID que nÃ£o existe na base de dados eu vou comeÃ§ar por verificar se o result nÃ£o Ã© vazio entÃ£o eu vou retornar um from DB result first porque Ã  partida ele sÃ³ vai ter um resultado tem que colocar aqui um else Porque caso nÃ£o Caso seja vazio tenho que fazer alguma coisa forma mais simples neste caso Ã© de lanÃ§ar uma sÃ£o e temos o nosso get Character feito aproveito jÃ¡ jÃ¡ que estou aqui a mexer neste Database Vou aproveitar tambÃ©m para criar jÃ¡ uma nova funÃ§Ã£o que me vai dar jeito esta pode ir aqui para baixo que Ã© uma funÃ§Ã£o que permite apagar todos os personagens que estÃ£o na base de dados aqui do telemÃ³vel vai ser parecida com o insert no sentido em que nÃ£o retorna nada ela limita-se a se executar mas Ã© a sÃ­ncrona Portanto tem que ser um Future void vamos manter Ã  mesma atÃ© vou copiar isto tudo porque aqui em vez de ser insert vai ser um Raw delete e aqui dentro Ã© tÃ£o simples como fazer isto vamos alterar a isto para que quando eu carrego aqui ele perceba que essa informaÃ§Ã£o estÃ¡ na base de dados e nÃ£o no servidor e por isso uso Esta funÃ§Ã£o nova que a gente criou aqui entÃ£o vamos aqui ao Character detail page precisar de obter tambÃ©m aqui a base de dados como fiz no characters list page estÃ£o a ver ou seja atÃ© vou copiar daqui e tal como no characters list page Eu preciso da source eu preciso saber se a source Ã© o network ou o Database lembram-se disso source atÃ© pode ser assim Aqui jÃ¡ nÃ£o tem ponto de interrogaÃ§Ã£o tenho a certeza Qual Ã© a source e vou acrescentar aqui ao meu Construtor E agora o que Ã© que eu vou fazer com essa source tal como no Character list page vou aproveitar para chamar uma funÃ§Ã£o diferente consoante a source Ã© network ou Ã© Database portanto se a source for Network vai retornar isto Caso contrÃ¡rio vai tornar isto simples apenas com esta alteraÃ§Ã£o deve ser o suficiente para isto funcionar Vamos sÃ³ aqui ver que ele agora tÃ¡ a dar um erro compilaÃ§Ã£o Porque isto agora precisa de dois parÃ¢metros nÃ£o basta o id nÃ£o basta eu passar no Construtor Qual Ã© a personagem Qual Ã© o ID da personagem que quer mostrar tambÃ©m tenho que passar Qual Ã© a sorce Ã  qual ele deve ir buscar esse personagem que basicamente Ã© o Source que jÃ¡ aqui temos Ok vamos testar isto Vamos sÃ³ aqui abrir aqui isto sÃ³ para ter a certeza que se houver pedidos ao servidor a gente os apanha cÃ¡ estÃ¡ nÃ³s nÃ£o estamos a meter informaÃ§Ã£o de nascimento nem de morte por isso Ã© que aparece a nu mas de resto parece estar tudo a funcionar bem reparem que agora jÃ¡ nÃ£o aparece aqui nenhum pedido ao servidor para testar o delete Ã³ vamos sÃ³ acresentar aqui um botÃ£o para apagar muito simples eu vou sÃ³ duplicar aqui criar aqui um delete All Button vou tambÃ©m embaixo copiar isto Ok e aqui em vez de ser insert Ã© delete All podemos simplificar isto e colocar numa expressÃ£o para ficar mais simples e vamos ver se ah falta aqui alterar isto Ok vamos ver se apagou Apagou o prÃ³ximo passo para preparar isto para o modo offline vamos olhar aqui para esta figura para percebermos melhor Ã© eliminar ou melhor melhorar um bocadinho Aqui Esta arquitetura reparem temos aqui um carters de repositÃ³rio que neste momento Ã© responsÃ¡vel por gerir a ligaÃ§Ã£o Ã  api todos os pedidos que sÃ£o feitos api passam por aqui e constrÃ³em um Character que pertence ao modelo atravÃ©s deste from Jason que aqui estÃ¡ por outro lado temos um lotr Database que obtÃ©m a partir da base de dados local do telemÃ³vel atravÃ©s dessas quatro funÃ§Ãµes que aqui estÃ£o interage com essa base de dados e tambÃ©m usa este Character que faz parte do modelo e em particular US of from DB e o to DB uma das coisas que podemos observar aqui Ã© que hÃ¡ aqui uma certa duplicaÃ§Ã£o Se quiserem quer um quer outro tem um get Character se quer um quer outro tem o get Character a partir do string ID este nÃ£o tem o insert e o delete apenas porque esta api Ã© apenas sÃ³ de leitura porque se fosse uma API descrita tambÃ©m atÃ© fazia sentido ter tambÃ©m aqui um insert e um delete de forma a que a gente pudesse apagar remotamente o os personagens que estavam no servidor e inserir novos personagens no servidor EntÃ£o o que a gente vai fazer para esta arquitetura Ã© comeÃ§ar por criar uma classe abstrata que se chama I characters repositÃ³rio o i vem de interface em Dart nÃ£o H interfaces mas a classe abstrata faz o mesmo efeito em que temos estas quatro funÃ§Ãµes abstratas e a seguir Vamos alterar isto para isto deixar de ser um repositÃ³rio porque na realidade o repositÃ³rio Ã© uma representaÃ§Ã£o genÃ©rica de uma fonte de informaÃ§Ã£o eu vou especificar que isto na realidade o que vem atravÃ©s da api Ã© atravÃ©s do lotr Services o que vem da base de dados atravÃ©s do lotr Database e ambos implementam esta classe abstrata Vamos entÃ£o implementar isto eu vou comeÃ§ar por uma vez que este Cars repositor na realidade Ã© o ltr Services eu vou copiar isto para a pasta data e vou-lhe chamar lotr Services seguir vou mudar aqui o nome da classe para lotr Services e esta classe vai passar a ser e characters repository e vai ser abstrata vamos retirar daqui o Construtor que nÃ£o Ã© necessÃ¡rio para nada Vamos retirar isto porque a gente deve apenas colocar aqui as assinaturas das funÃ§Ãµes vamos tambÃ©m copiar para aqui estas funÃ§Ãµes Vamos mudar sÃ³ aqui o nome para refletir o i characters repository e agora claro que ele se estÃ¡ a caixar porque se isto Ã© abstrato eu nÃ£o posso instanciar isto e nem sequer existe este Construtor portanto na realidade o que eu agora quero aqui Ã© um ot Services aqui a mesma coisa e agora aqui no sÃ³ verificar aqui isto Deixa de ser a car supositÃ³rio para passar a ser lotr Services e isto vamos chamar Services e vamos Copiar esta linha para o Character detail page falta importar e aqui vamos chamar Services ou seja fica bastante mais claro se a sorce Network vai ao Services caso contÃ¡rio vai Database Vamos sÃ³ verificar que continua tudo a funcionar Ok cÃ¡ estÃ¡ os pedidos a aparecerem E se for atravÃ©s do Database Ok nÃ£o tenho cÃ¡ nada vou inserir aqui um personagem jÃ¡ cÃ¡ tenho um e continua tudo a funcionar falta-me sÃ³ aqui um pormenor que Ã© eu criei Aqui Esta classe abstrata mas estas classes NÃ£o estendem essa classe abstrata Portanto vamos alterar isso tÃ¡ aqui ele dÃ¡ um erro porque falta o delete All e o insert Ã verdade e para jÃ¡ eles nÃ£o vÃ£o fazer nada e pronto esta estrutura implementada notem aqui que este insert e este elit tÃ£o mais cente precisamente porque eles nÃ£o estÃ£o a fazer nada no entanto ambos estendem o IC repositÃ³rio EntÃ£o no prÃ³ximo vÃ­deo Vamos mostrar para que Ã© que isto serve como Ã© que a gente vai usar o modo offline desta forma com esta arquitetura
